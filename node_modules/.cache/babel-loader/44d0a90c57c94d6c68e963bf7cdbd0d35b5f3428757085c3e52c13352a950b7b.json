{"ast":null,"code":"var _jsxFileName = \"/Users/nuriakh/Desktop/diplom2025/appdiplom/src/pages/reminders.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Reminders = () => {\n  _s();\n  const [reminders, setReminders] = useState([{\n    id: 1,\n    text: \"Drink water\",\n    interval: 10,\n    // minutes\n    start: \"09:00\",\n    end: \"23:59\",\n    lastTriggered: null\n  }]);\n  const [popup, setPopup] = useState(null);\n  useEffect(() => {\n    const checkReminders = () => {\n      const now = new Date();\n      const currentMinutes = now.getHours() * 60 + now.getMinutes();\n      setReminders(prev => prev.map(reminder => {\n        const startMin = parseTime(reminder.start);\n        const endMin = parseTime(reminder.end);\n        const lastTrig = reminder.lastTriggered || -Infinity;\n        const shouldShow = currentMinutes >= startMin && currentMinutes <= endMin && currentMinutes - lastTrig >= reminder.interval;\n        if (shouldShow) {\n          setPopup(reminder.text);\n\n          // Auto-close popup after 5 seconds\n          setTimeout(() => setPopup(null), 5000);\n          return {\n            ...reminder,\n            lastTriggered: currentMinutes\n          };\n        }\n        return reminder;\n      }));\n    };\n    const interval = setInterval(checkReminders, 60000); // check every minute\n    checkReminders(); // initial call\n    return () => clearInterval(interval);\n  }, []);\n  const parseTime = timeStr => {\n    const [hours, minutes] = timeStr.split(\":\").map(Number);\n    return hours * 60 + minutes;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-3xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"Active Reminders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-3\",\n      children: reminders.map(rem => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"border p-4 rounded bg-gray-100 shadow-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-semibold\",\n          children: rem.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600\",\n          children: [\"Every \", rem.interval, \" min | \", rem.start, \" \\u2013 \", rem.end]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, rem.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), popup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed bottom-6 right-6 bg-white shadow-xl border border-blue-500 text-blue-900 px-6 py-4 rounded-lg animate-bounce z-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Reminder:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), \" \", popup]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Reminders, \"yDEqHN3nYS3wmhuZS0BL/pYQvLI=\");\n_c = Reminders;\nvar _c;\n$RefreshReg$(_c, \"Reminders\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Reminders","_s","reminders","setReminders","id","text","interval","start","end","lastTriggered","popup","setPopup","checkReminders","now","Date","currentMinutes","getHours","getMinutes","prev","map","reminder","startMin","parseTime","endMin","lastTrig","Infinity","shouldShow","setTimeout","setInterval","clearInterval","timeStr","hours","minutes","split","Number","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rem","_c","$RefreshReg$"],"sources":["/Users/nuriakh/Desktop/diplom2025/appdiplom/src/pages/reminders.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport const Reminders = () => {\n  const [reminders, setReminders] = useState([\n    {\n      id: 1,\n      text: \"Drink water\",\n      interval: 10, // minutes\n      start: \"09:00\",\n      end: \"23:59\",\n      lastTriggered: null,\n    }\n  ]);\n  const [popup, setPopup] = useState(null);\n\n  useEffect(() => {\n    const checkReminders = () => {\n      const now = new Date();\n      const currentMinutes = now.getHours() * 60 + now.getMinutes();\n\n      setReminders((prev) =>\n        prev.map((reminder) => {\n          const startMin = parseTime(reminder.start);\n          const endMin = parseTime(reminder.end);\n          const lastTrig = reminder.lastTriggered || -Infinity;\n\n          const shouldShow =\n            currentMinutes >= startMin &&\n            currentMinutes <= endMin &&\n            currentMinutes - lastTrig >= reminder.interval;\n\n          if (shouldShow) {\n            setPopup(reminder.text);\n\n            // Auto-close popup after 5 seconds\n            setTimeout(() => setPopup(null), 5000);\n\n            return { ...reminder, lastTriggered: currentMinutes };\n          }\n          return reminder;\n        })\n      );\n    };\n\n    const interval = setInterval(checkReminders, 60000); // check every minute\n    checkReminders(); // initial call\n    return () => clearInterval(interval);\n  }, []);\n\n  const parseTime = (timeStr) => {\n    const [hours, minutes] = timeStr.split(\":\").map(Number);\n    return hours * 60 + minutes;\n  };\n\n  return (\n    <div className=\"p-6 max-w-3xl mx-auto\">\n      <h1 className=\"text-3xl font-bold mb-4\">Active Reminders</h1>\n      <ul className=\"space-y-3\">\n        {reminders.map((rem) => (\n          <li key={rem.id} className=\"border p-4 rounded bg-gray-100 shadow-sm\">\n            <div className=\"font-semibold\">{rem.text}</div>\n            <div className=\"text-sm text-gray-600\">\n              Every {rem.interval} min | {rem.start} â€“ {rem.end}\n            </div>\n          </li>\n        ))}\n      </ul>\n\n      {popup && (\n        <div className=\"fixed bottom-6 right-6 bg-white shadow-xl border border-blue-500 text-blue-900 px-6 py-4 rounded-lg animate-bounce z-50\">\n          <strong>Reminder:</strong> {popup}\n        </div>\n      )}\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}